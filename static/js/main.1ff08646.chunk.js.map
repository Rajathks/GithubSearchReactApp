{"version":3,"sources":["components/Navbar.js","context/alert/alertContext.js","context/alert/alertReducer.js","context/types.js","context/alert/AlertState.js","context/github/GithubContext.js","components/Search.js","components/UserItem.js","components/Users.js","components/Home.js","components/repos/RepoItem.js","components/repos/Repos.js","components/User.js","components/Pages/NotFound.js","components/Alert.js","components/Pages/About.js","context/github/GithubReducer.js","context/github/GithubState.js","App.js","index.js"],"names":["Navbar","props","className","title","to","AlertContext","createContext","state","action","type","payload","AlertState","useReducer","AlertReducer","dispatch","Provider","value","alert","setAlert","msg","setTimeout","children","GithubContext","Search","useState","text","setText","githubContext","useContext","alertContext","clearUsers","users","onSubmit","e","preventDefault","searchUsers","name","placeholder","onChange","target","length","onClick","UserItem","user","login","avatar_url","src","alt","style","width","userStyle","display","gridTemplateColumns","gridGap","Users","map","key","id","Home","RepoItem","repo","href","html_url","Repos","repos","User","match","getUser","getUserRepos","useEffect","params","company","location","bio","blog","followers","following","public_repos","public_gists","hireable","NotFound","Alert","About","loading","GithubState","githubReducer","setLoading","a","async","console","log","axios","get","process","res","data","items","username","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ff08646.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link } from 'react-router-dom'\r\n\r\nconst Navbar = (props) =>  {\r\n    \r\n        return (\r\n            <nav className=\"navbar bg-primary\">\r\n            <h1>  {props.title} <i className=\"fab fa-github\"/>\r\n            </h1>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                <Link to=\"/about\">About</Link>\r\n                </li>\r\n            </ul>\r\n            </nav>\r\n        )\r\n    \r\n}\r\n\r\nexport default Navbar\r\n","import { createContext } from 'react'\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport default AlertContext","import { SET_ALERT, REMOVE_ALERT } from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n      case REMOVE_ALERT:\r\n          return null;\r\n      \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';","import React, { useReducer } from \"react\";\r\n\r\nimport AlertContext from \"./alertContext\";\r\nimport AlertReducer from \"./alertReducer\";\r\nimport {\r\n  SET_ALERT,\r\n  REMOVE_ALERT\r\n} from \"../types\";\r\n\r\nconst AlertState = props => {\r\n  const initialState = null; \r\n\r\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n //Set Alert\r\n\r\n const setAlert = (msg, type) => {\r\n     dispatch({\r\n        type: SET_ALERT,\r\n        payload : { msg , type}\r\n     });\r\n    \r\n    setTimeout(() => dispatch({type: REMOVE_ALERT }), 4000);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n          alert : state,\r\n          setAlert\r\n       \r\n        \r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n","import { createContext } from 'react'\r\n\r\nconst GithubContext = createContext();\r\n\r\nexport default GithubContext","import React, { useState, useContext } from \"react\";\r\n\r\nimport GithubContext from \"../context/github/GithubContext\";\r\nimport AlertContext from '../context/alert/alertContext'\r\n\r\nconst Search = () => {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const { clearUsers , users} = githubContext;\r\n  const { setAlert } = alertContext;\r\n  const onChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === \"\") {\r\n      setAlert(\"Please Enter something \", \"light\");\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText(\" \");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"Form\" onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"text\"\r\n          placeholder=\"Search Any user\"\r\n          value={text}\r\n          onChange={onChange}\r\n        />\r\n        <input type=\"Submit\" className=\"btn btn-dark btn-block\" />\r\n      </form>\r\n      {users.length >0 && (\r\n        <button className=\" btn btn-light btn-block\" onClick={clearUsers}>\r\n          {\" \"}\r\n          Clear\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n const UserItem = (props) =>  {\r\n    \r\n\r\n        const {login , avatar_url } = props.user;\r\n\r\n        return (\r\n            <div>\r\n            <div className=\"card text-center\">\r\n             <img src={avatar_url} alt=\" avatar\"  className=\"round-img\" style={{width : \"60px\"}}/>\r\n             <h3> {login}</h3>\r\n            <div>\r\n            <Link to={`/user/${login}`} className=\"btn btn-dark btn-sm my=1\" > More</Link>\r\n            </div>\r\n            </div>\r\n            \r\n            \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default UserItem\r\n","import React, {useContext} from 'react'\r\nimport UserItem from './UserItem'\r\nimport GithubContext from '../context/github/GithubContext'\r\n\r\n\r\n\r\n const Users = () => {\r\n     \r\n    const githubContext = useContext(GithubContext)\r\n    const {users} = githubContext;\r\n   \r\n        return (\r\n            <div style={userStyle}>\r\n                {users.map(user =>(\r\n                    <UserItem key={user.id} user={user}/>\r\n                ))}\r\n                    \r\n            \r\n            </div>\r\n        );\r\n    }\r\nconst userStyle = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(3,1fr)',\r\n    gridGap : '1rem'\r\n}\r\n\r\nexport default Users\r\n","import React , { Fragment} from 'react'\r\nimport Search from './Search'\r\nimport Users from './Users'\r\n\r\n const Home = () => {\r\n    return (\r\n        <Fragment>\r\n             <Search/>\r\n                      <Users/>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Home","import React from 'react'\r\n\r\n const RepoItem = ({repo}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <h3>\r\n                <a href={repo.html_url}>{repo.name}</a>\r\n            </h3>\r\n        </div>\r\n    )\r\n}\r\nexport default RepoItem","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport RepoItem from './RepoItem'\r\nimport GithubContext from '../../context/github/GithubContext'\r\n\r\n const Repos = () => {\r\n\r\n    const githubContext = useContext(GithubContext);\r\n    const {repos } = githubContext;\r\n     \r\n    return repos.map(repo => <RepoItem repo={repo} key={repo.id} />)\r\n}\r\n\r\nRepos.propTypes ={\r\n    repos :PropTypes.array.isRequired\r\n};\r\nexport default Repos","import React, { useEffect, Fragment, useContext } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Repos from './repos/Repos'\r\nimport GithubContext from '../context/github/GithubContext'\r\n\r\nconst User = ({match}) => {\r\n\r\n    const githubContext = useContext(GithubContext);\r\n    const {user,getUser , getUserRepos, repos} = githubContext;\r\n\r\nuseEffect(() =>{\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n    //eslint-disable-next-line\r\n},[ ]);\r\n\r\n \r\nconst {name , avatar_url , company ,location , html_url, bio,blog,login,followers,following,public_repos, public_gists, hireable} =user;\r\n        \r\n       \r\n        return (\r\n            \r\n             <Fragment>\r\n                 <Link to='/' className=\"btn btn-light\"> Back to the Search Component</Link>\r\n                 Hireable : {' '}\r\n                 {hireable ?( <i className=\"fas fa-check text-success\" />) : (<i className=\"fas fa-times-circle text-danger\" />)}\r\n          \r\n\r\n             <div className = \"card grid-2\">\r\n             \r\n                <div className = \"all-center\">\r\n                <img src={avatar_url} alt=\"Avatar pic\" className=\"round-img\" style={{width:\"150px\"}}/>\r\n                <h1>{name}</h1>\r\n                <p> Location : {location}</p>\r\n\r\n                </div>\r\n             <div>\r\n                 {bio && (<Fragment>\r\n                     <h3>Bio</h3>\r\n                        <p>{bio}</p>\r\n                         </Fragment>)}\r\n\r\n                         <a href={html_url} className=\"btn btn-dark my-1\"> Visit my Github Profile</a>\r\n                         <ul>\r\n                             <li>\r\n                                 {login && (\r\n                                     <Fragment>\r\n                                         <strong>Username : </strong> {login}\r\n\r\n                                     </Fragment>\r\n                                 )}\r\n                             </li>\r\n                             <li>\r\n                                 {company && (\r\n                                     <Fragment>\r\n                                         <strong>Company : </strong> {company}\r\n                                         \r\n                                     </Fragment>\r\n                                 )}\r\n                             </li>\r\n                             <li>\r\n                                 {blog && (\r\n                                     <Fragment>\r\n                                         <strong>My Blog : </strong> {blog}\r\n                                         \r\n                                     </Fragment>\r\n                                 )}\r\n                             </li>\r\n                         </ul>\r\n             </div>\r\n             </div>\r\n             <div className=\"card text-center\">\r\n                                    <div className=\"badge badge-primary\"> Followers : {followers }</div>\r\n                                    <div className=\"badge badge-success\"> Following : {following }</div>\r\n                                    <div className=\"badge badge-light\"> public_repos : {public_repos }</div>\r\n                                    <div className=\"badge badge-dark\"> public_gists : {public_gists }</div>\r\n                                    \r\n             </div>\r\n\r\n<Repos repos ={repos} />\r\n         \r\n            </Fragment>\r\n           \r\n        );\r\n    }\r\n\r\n    \r\n\r\n\r\nexport default User\r\n","import React from 'react'\r\n\r\n const NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1> Page Not Found</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { useContext } from 'react'\r\nimport AlertContext from '../context/alert/alertContext'\r\n const Alert = () => {\r\n     const alertContext = useContext(AlertContext);\r\n     const {alert} = alertContext;\r\n    return (\r\n       alert != null &&  (\r\n           <div className={`alert alert-${alert.type}`}>\r\n<i className=\" fa fa-info-circle\">${alert.msg}</i>\r\n\r\n           </div>\r\n       )\r\n    )\r\n}\r\nexport default Alert\r\n","import React, { Fragment } from 'react'\r\n\r\n const About = () => {\r\n    return (\r\n        <Fragment>\r\n            <h1> This is the About Page</h1>\r\n            <p> App to Search Github Users</p>\r\n            <p> Version 1.0.0</p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default About","import {\r\n\r\n    SEARCH_USERS,\r\n    CLEAR_USERS,\r\n    SET_LOADING,\r\n    GET_USER,\r\n    GET_REPOS\r\n\r\n} from '../types'\r\n\r\nexport default (state, action) =>{\r\n\r\n    switch(action.type){\r\n\r\n        case SEARCH_USERS : return {\r\n            ...state,\r\n            users: action.payload,\r\n            loading: false\r\n        };\r\n        case GET_USER : return {\r\n            ...state,\r\n            user: action.payload, \r\n            loading:false\r\n        }\r\n        case CLEAR_USERS : return {\r\n            ...state,\r\n            users : [],\r\n            loading : false\r\n        }\r\n        case GET_REPOS : return{\r\n            ...state,\r\n            repos : action.payload,\r\n            loading : false\r\n        }\r\n\r\n        case SET_LOADING :  \r\n                            return {\r\n                                ...state,\r\n                                loading :true\r\n                            };\r\n\r\n        default : \r\n         return state;\r\n    }\r\n\r\n\r\n\r\n}","import React, { useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport GithubContext from \"./GithubContext\";\r\nimport githubReducer from \"./GithubReducer\";\r\nimport {\r\n  SEARCH_USERS,\r\n  CLEAR_USERS,\r\n  SET_LOADING,\r\n  GET_USER,\r\n  GET_REPOS\r\n} from \"../types\";\r\n\r\nconst GithubState = props => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(githubReducer, initialState);\r\n\r\n  //Search User\r\n\r\n  const searchUsers = async text => {\r\n    console.log(text);\r\n\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items\r\n    });\r\n  };\r\n\r\n  //Get USer\r\n  const getUser = async username => {\r\n    setLoading();\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data\r\n    });\r\n  };\r\n\r\n  //Get Repos\r\n\r\n  const getUserRepos = async username => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n    \r\n  \r\n    dispatch({\r\n      type : GET_REPOS,\r\n      payload : res.data,\r\n      loading: false\r\n    });\r\n  };\r\n\r\n  //Clear users\r\n\r\n  const clearUsers = () => {\r\n    dispatch({\r\n      type: CLEAR_USERS\r\n    });\r\n  };\r\n\r\n  //Set loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        clearUsers,\r\n        getUser,\r\n        getUserRepos\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;\r\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport AlertState from \"./context/alert/AlertState\";\nimport Home from \"./components/Home\";\nimport User from \"./components/User\";\nimport NotFound from './components/Pages/NotFound'\nimport Alert from \"./components/Alert\";\nimport About from \"./components/Pages/About\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport GithubState from \"./context/github/GithubState\";\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Navbar title=\"Git Hub Finder Project \" />\n\n              <div className=\"container\">\n                <Alert />\n\n                <Switch>\n                  <Route exact path=\"/\" component={Home}></Route>\n                  <Route exact path=\"/about\" component={About}></Route>\n                  <Route exact path=\"/user/:login\" component={User} />\n                  <Route component={NotFound}/>\n                </Switch>\n              </div>\n            </header>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}